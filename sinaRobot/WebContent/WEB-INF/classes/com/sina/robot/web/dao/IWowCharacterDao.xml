<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="com.wowdb.wowdata.dao.api.IWowCharacterDao">  

 
 <insert id="batchCreateOrUpdateCharacter">
       begin
       <foreach item="item" index="index" collection="characters">
          MERGE INTO wowdb_character  character
          USING (SELECT 1 FROM DUAL) P
          ON (character.realm= #{item.realm} and character.NAME=#{item.name} )
          WHEN MATCHED THEN
          UPDATE
               set 
                   character.BATTLEGROUP=#{item.battlegroup,jdbcType=VARCHAR},
                   character.CLASS_ID=#{item.mclass,jdbcType=NUMERIC},
                   character.RACE=#{item.race,jdbcType=NUMERIC},
                   character.GENDER=#{item.gender,jdbcType=NUMERIC},
                   character.LEVELS=#{item.level,jdbcType=NUMERIC},
                   character.ACHIEVEMENTPOINTS=#{item.achievementPoints,jdbcType=NUMERIC},
                   character.THUMBNAIL=#{item.thumbnail,jdbcType=VARCHAR},
                   character.CALCCLASS=#{item.calcClass,jdbcType=VARCHAR},
                   character.TOTALHONORABLEKILLS=#{item.totalHonorableKills,jdbcType=NUMERIC},
                   character.LAST_UPDATE_DATE=sysdate,
                   character.LAST_UPDATED_BY='sys'
          WHEN NOT MATCHED THEN
           INSERT  
             (ID,
              NAME,
              REALM,
              BATTLEGROUP,
              CLASS_ID,
              RACE,
              GENDER,
              LEVELS,
              ACHIEVEMENTPOINTS,
              THUMBNAIL,
              CALCCLASS,
              TOTALHONORABLEKILLS,
              CREATION_DATE,
              CREATED_BY,
              LAST_UPDATE_DATE,
              LAST_UPDATED_BY
             )
             VALUES
             (
              SEQ_WOW_CHARACTER.nextval,
              #{item.name,jdbcType=VARCHAR},
              #{item.realm,jdbcType=VARCHAR},
              #{item.battlegroup,jdbcType=VARCHAR},
              #{item.mclass,jdbcType=NUMERIC},
              #{item.race,jdbcType=NUMERIC},
              #{item.gender,jdbcType=NUMERIC},
              #{item.level,jdbcType=NUMERIC},
              #{item.achievementPoints,jdbcType=NUMERIC},
              #{item.thumbnail,jdbcType=VARCHAR},
              #{item.calcClass,jdbcType=VARCHAR},
              #{item.totalHonorableKills,jdbcType=NUMERIC},
              sysdate,
              'sys',
              sysdate,
              'sys'
             );
        </foreach>
     end;
 </insert>



<insert id="createOrUpdateCharacter">
          MERGE INTO wowdb_character  character
          USING (SELECT 1 FROM DUAL) P
          ON (character.realm= #{characterVO.realm} and character.NAME=#{characterVO.name} )
          WHEN MATCHED THEN
          UPDATE
               set 
                   character.BATTLEGROUP=#{characterVO.battlegroup,jdbcType=VARCHAR},
                   character.CLASS_ID=#{characterVO.mclass,jdbcType=NUMERIC},
                   character.RACE=#{characterVO.race,jdbcType=NUMERIC},
                   character.GENDER=#{characterVO.gender,jdbcType=NUMERIC},
                   character.LEVELS=#{characterVO.level,jdbcType=NUMERIC},
                   character.ACHIEVEMENTPOINTS=#{characterVO.achievementPoints,jdbcType=NUMERIC},
                   character.THUMBNAIL=#{characterVO.thumbnail,jdbcType=VARCHAR},
                   character.CALCCLASS=#{characterVO.calcClass,jdbcType=VARCHAR},
                   character.TOTALHONORABLEKILLS=#{characterVO.totalHonorableKills,jdbcType=NUMERIC},
                   character.LAST_UPDATE_DATE=sysdate,
                   character.LAST_UPDATED_BY='sys'
          WHEN NOT MATCHED THEN
           INSERT  
             (ID,
              NAME,
              REALM,
              BATTLEGROUP,
              CLASS_ID,
              RACE,
              GENDER,
              LEVELS,
              ACHIEVEMENTPOINTS,
              THUMBNAIL,
              CALCCLASS,
              TOTALHONORABLEKILLS,
              CREATION_DATE,
              CREATED_BY,
              LAST_UPDATE_DATE,
              LAST_UPDATED_BY
             )
             VALUES
             (
              SEQ_WOW_CHARACTER.nextval,
              #{characterVO.name,jdbcType=VARCHAR},
              #{characterVO.realm,jdbcType=VARCHAR},
              #{characterVO.battlegroup,jdbcType=VARCHAR},
              #{characterVO.mclass,jdbcType=NUMERIC},
              #{characterVO.race,jdbcType=NUMERIC},
              #{characterVO.gender,jdbcType=NUMERIC},
              #{characterVO.level,jdbcType=NUMERIC},
              #{characterVO.achievementPoints,jdbcType=NUMERIC},
              #{characterVO.thumbnail,jdbcType=VARCHAR},
              #{characterVO.calcClass,jdbcType=VARCHAR},
              #{characterVO.totalHonorableKills,jdbcType=NUMERIC},
              sysdate,
              'sys',
              sysdate,
              'sys'
             )
 </insert>
 
 
 
 
 <insert id="batchCreateOrUpdateRaces">
       begin
       <foreach item="item" index="index" collection="races">
          MERGE INTO WOWDB_CHARACTER_RACE  race
          USING (SELECT 1 FROM DUAL) P
          ON (race.id= #{item.id} )
          WHEN MATCHED THEN
          UPDATE
               set 
                   race.MASK=#{item.mask,jdbcType=NUMERIC},
                   race.SIDE=#{item.side,jdbcType=VARCHAR},
                   race.NAME=#{item.name,jdbcType=VARCHAR},
                   race.LAST_UPDATE_DATE=sysdate
          WHEN NOT MATCHED THEN
           INSERT  
             (ID,
              MASK,
              SIDE,
              NAME,
              CREATION_DATE,
              LAST_UPDATE_DATE
             )
             VALUES
             (
              #{item.id,jdbcType=NUMERIC},
              #{item.mask,jdbcType=NUMERIC},
              #{item.side,jdbcType=VARCHAR},
              #{item.name,jdbcType=VARCHAR},
              sysdate,
              sysdate
             );
        </foreach>
     end;
 </insert>

 <insert id="batchCreateOrUpdateClasses">
       begin
       <foreach item="item" index="index" collection="classes">
          MERGE INTO wowdb_character_class   class
          USING (SELECT 1 FROM DUAL) P
          ON (class.id= #{item.id} )
          WHEN MATCHED THEN
          UPDATE
               set 
                   class.MASK=#{item.mask,jdbcType=NUMERIC},
                   class.POWERTYPE=#{item.powerType,jdbcType=VARCHAR},
                   class.NAME=#{item.name,jdbcType=VARCHAR},
                   class.LAST_UPDATE_DATE=sysdate
          WHEN NOT MATCHED THEN
           INSERT  
             (ID,
              MASK,
              POWERTYPE,
              NAME,
              CREATION_DATE,
              LAST_UPDATE_DATE
             )
             VALUES
             (
              #{item.id,jdbcType=NUMERIC},
              #{item.mask,jdbcType=NUMERIC},
              #{item.powerType,jdbcType=VARCHAR},
              #{item.name,jdbcType=VARCHAR},
              sysdate,
              sysdate
             );
        </foreach>
     end;
 </insert>

 
</mapper>  
